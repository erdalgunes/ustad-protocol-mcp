[tool.poetry]
name = "ustad"
version = "0.1.0"
description = "Ustad - The Master Teacher MCP for collaborative AI wisdom"
authors = ["Bot MCP Team"]
readme = "README.md"
packages = [{include = "ustad", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
mcp = "^1.0.0"
chess = "^1.10.0"
pydantic = "^2.5.0"
asyncio = "^3.4.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.1.0"
black = "^24.0.0"
isort = "^5.13.0"
mypy = "^1.8.0"
ruff = "^0.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src/ustad"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = ["E", "F", "B", "Q", "I", "N", "UP", "S", "A", "C90", "T20", "RET", "SIM", "ARG"]
ignore = ["S101"]  # Allow assert in tests